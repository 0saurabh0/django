name: Need Tests Check

on:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]

permissions:
  pull-requests: write
  contents: read

jobs:
  check-need-tests:
    if: github.repository == 'django/django'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Sophisticated test coverage analysis
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const pr = context.payload.pull_request;
            
            // Get all changed files with their patches
            const files = await github.paginate(
              github.rest.pulls.listFiles,
              { 
                owner: context.repo.owner, 
                repo: context.repo.repo, 
                pull_number: pr.number,
                per_page: 100
              }
            );
            
            // Prepare data for Python analysis
            const inputData = {
              title: pr.title,
              body: pr.body || "",
              files: files.map(f => ({
                filename: f.filename,
                status: f.status,
                additions: f.additions,
                deletions: f.deletions,
                changes: f.changes,
                patch: f.patch || ""
              })),
              labels: pr.labels.map(l => l.name)
            };
            
            // Run sophisticated Python analysis
            try {
              const analysisJson = execSync('python .github/scripts/sophisticated_test_analyzer.py', {
                input: JSON.stringify(inputData),
                encoding: 'utf8',
                maxBuffer: 1024 * 1024 * 10 // 10MB buffer for large diffs
              });
              
              const analysis = JSON.parse(analysisJson);
              console.log('Analysis result:', JSON.stringify(analysis, null, 2));
              
              const label = "need tests";
              const labels = pr.labels.map(l => l.name);
              const hasNoTestsNeeded = labels.includes('no-tests-needed');
              
              // Handle labeling based on sophisticated analysis
              if (analysis.needs_tests && !labels.includes(label) && !hasNoTestsNeeded) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  labels: [label]
                });
                
                if (analysis.comment_message) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    body: analysis.comment_message
                  });
                }
                
                console.log(`Added "${label}" label to PR #${pr.number}`);
              } else if (!analysis.needs_tests && labels.includes(label)) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  name: label
                });
                console.log(`Removed "${label}" label from PR #${pr.number}`);
              } else {
                console.log("No label change needed based on sophisticated analysis.");
              }
              
            } catch (error) {
              console.error('Error running sophisticated analysis:', error);
              console.log('Falling back to basic analysis...');
              
              // Fallback to basic analysis if sophisticated fails
              const coreChanged = files.some(f => 
                f.filename.startsWith('django/') && 
                f.filename.endsWith('.py') &&
                !f.filename.startsWith('django/tests/')
              );
              const testsChanged = files.some(f => f.filename.startsWith('tests/'));
              
              if (coreChanged && !testsChanged) {
                console.log('Basic analysis suggests tests might be needed');
              }
            }