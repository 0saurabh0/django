name: 'Coverage Commenter'
description: 'Comments on PRs with coverage analysis and warnings'

inputs:
  coverage-data:
    description: 'Path to coverage data file'
    required: true
  diff-cover-report:
    description: 'Path to diff-cover HTML report'
    required: false
  token:
    description: 'GitHub token for commenting'
    required: true
    default: ${{ github.token }}

runs:
  using: 'composite'
  steps:
    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install coverage diff-cover

    - name: Generate coverage comment
      shell: bash
      run: |
        # Generate coverage summary
        coverage report --show-missing > coverage_summary.txt
        
        # Create comment body
        cat > comment_body.md << 'EOF'
        ## Test Coverage Analysis
        
        This PR has been analyzed for test coverage using **SQLite database** tests.
        
        ### Coverage Summary
        ```
        $(cat coverage_summary.txt)
        ```
        
        ### Important Notes
        
        **Coverage warnings are informational only** - they don't block PRs from merging.
        
        **Some code paths may show as uncovered because:**
        - They only execute with specific databases (MySQL, PostgreSQL, Oracle)
        - They require specific environment configurations
        - They are platform-specific code paths
        - They handle edge cases that aren't triggered by current tests
        
        **Recommendation:** Review uncovered lines to ensure critical paths are tested, but don't worry about database-specific code that can't be tested with SQLite.
        
        ### Coverage Reports
        - **HTML Coverage Report**: Available in workflow artifacts
        - **Diff Coverage Report**: Shows coverage for changed lines only
        
        ---
        *This comment was automatically generated by the coverage analysis workflow.*
        EOF
        
        # Post comment to PR
        gh pr comment ${{ github.event.pull_request.number}} --body-file comment_body.md 